{"ast":null,"code":"var _jsxFileName = \"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './css/MessagePannel.css';\nimport MessageSenderLayout from './MessageSenderLayout';\nimport { Row, Col } from 'react-bootstrap';\nimport MessageReceiveLayout from './MessageReceiveLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMessageQueue } from '../../../features/Messages';\nimport { format } from 'date-fns';\nimport SendBtn from './SendBtn';\nimport { QueryCache, useQueryClient } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePannel = ({\n  socket,\n  cur_user,\n  outerQueue,\n  setOuterQueue\n}) => {\n  _s();\n  const {\n    chatId\n  } = useSelector(state => state.msgSlice.MessageHeader);\n  // #message receive lisitener\n  console.log(chatId);\n  const client = useQueryClient();\n  useEffect(() => {\n    var _client$getQueryData;\n    const result = (_client$getQueryData = client.getQueryData([\"getContactList\"])) === null || _client$getQueryData === void 0 ? void 0 : _client$getQueryData.data.filter(privateRoom => {\n      return privateRoom.privateRoom_Token === chatId;\n    })[0][\"sources\"];\n    setMsgQueue(result);\n  }, []);\n  const [msgQueue, setMsgQueue] = useState([]);\n  // console.log(\"Catch obtain\",result)\n\n  socket.on(\"message\", payload => {\n    setMsgQueue([...msgQueue, payload]);\n    // console.log(\"message receviev message Queue \", msgQueue)\n  });\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pannelBound\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContentChat\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: msgQueue.map(({\n            sender,\n            sendTo,\n            sumited_at,\n            message\n          }) => {\n            if (cur_user === sendTo) {\n              return /*#__PURE__*/_jsxDEV(MessageReceiveLayout, {\n                content: message,\n                date: sumited_at,\n                sender: sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 43\n              }, this);\n            } else if (cur_user === sender) {\n              return /*#__PURE__*/_jsxDEV(MessageSenderLayout, {\n                content: message,\n                date: sumited_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 44\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SendBtn, {\n      socket: socket,\n      msgQueue: msgQueue,\n      setMsgQueue: setMsgQueue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePannel, \"YVYyVLVNHxlER3PhixV6fU5/8Vg=\", false, function () {\n  return [useSelector, useQueryClient];\n});\n_c = MessagePannel;\nexport default MessagePannel;\nvar _c;\n$RefreshReg$(_c, \"MessagePannel\");","map":{"version":3,"names":["React","useEffect","useState","MessageSenderLayout","Row","Col","MessageReceiveLayout","useDispatch","useSelector","updateMessageQueue","format","SendBtn","QueryCache","useQueryClient","jsxDEV","_jsxDEV","MessagePannel","socket","cur_user","outerQueue","setOuterQueue","_s","chatId","state","msgSlice","MessageHeader","console","log","client","_client$getQueryData","result","getQueryData","data","filter","privateRoom","privateRoom_Token","setMsgQueue","msgQueue","on","payload","Fragment","children","className","map","sender","sendTo","sumited_at","message","content","date","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js"],"sourcesContent":["import React  ,{useEffect, useState} from 'react'\nimport './css/MessagePannel.css'\nimport MessageSenderLayout from './MessageSenderLayout'\nimport {Row ,Col } from 'react-bootstrap'\nimport MessageReceiveLayout from './MessageReceiveLayout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateMessageQueue } from '../../../features/Messages'\nimport {format } from 'date-fns'\nimport SendBtn from './SendBtn'\nimport { QueryCache, useQueryClient } from '@tanstack/react-query'\n\nconst MessagePannel = ({socket,cur_user ,outerQueue , setOuterQueue }) => {\n\n    const {chatId} =  useSelector(state=> state.msgSlice.MessageHeader);\n    // #message receive lisitener\n    console.log(chatId)\n    \n    const client = useQueryClient();\n\n    useEffect(()=>{\n        const result = client.getQueryData([\"getContactList\"])?.data                         \n                    .filter( (privateRoom)=> {\n                        return privateRoom.privateRoom_Token === chatId\n                    })[0][\"sources\"]\n        \n        setMsgQueue(result)\n    },[])\n    \n    const [msgQueue, setMsgQueue]= useState([]);\n    // console.log(\"Catch obtain\",result)\n\n    socket.on(\"message\", (payload)=>{\n\n        setMsgQueue([...msgQueue , payload] )\n        // console.log(\"message receviev message Queue \", msgQueue)\n      })\n\n\n    \n\n  return (\n    <React.Fragment>\n        <div className='pannelBound' >\n            <div className='mainContentChat'>\n                    <Row>\n                        {\n                            \n                            msgQueue.map(({sender,sendTo , sumited_at ,message})=>{\n                              if(cur_user===sendTo){\n                                  return (<MessageReceiveLayout content={message} date={sumited_at} sender={sender}  />)\n                              \n                                }else if(cur_user=== sender){\n                                    return <MessageSenderLayout content={message}  date={sumited_at}  />\n                                }\n\n                            })\n                        } \n                    </Row>\n                </div>\n        </div>\n        <SendBtn socket={socket} msgQueue={msgQueue} setMsgQueue={setMsgQueue} />\n    </React.Fragment>\n  )\n}\n\nexport default MessagePannel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}