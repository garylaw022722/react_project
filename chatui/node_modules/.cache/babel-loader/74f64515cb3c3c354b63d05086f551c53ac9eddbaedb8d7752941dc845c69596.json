{"ast":null,"code":"var _jsxFileName = \"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/MessagePannel.css';\nimport MessageSenderLayout from './MessageSenderLayout';\nimport { Row, Col } from 'react-bootstrap';\nimport MessageReceiveLayout from './MessageReceiveLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMessageQueue } from '../../../features/Messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePannel = ({\n  socket\n}) => {\n  _s();\n  const [receiveQueue, setReceiveQueue] = useState([]);\n  const [messageQueue, addMessageQueue] = useState([]);\n  const cur_usr = useSelector(state => state.user.profile.username);\n  const senderQueue = useSelector(state => state.msgSlice.senderQueue);\n  const dispatch = useDispatch();\n  // #message receive lisitener\n  socket.on(\"message\", ({\n    sender,\n    sendTo,\n    message,\n    sumited_at\n  }) => {\n    console.log(`current usr is ${cur_usr}`);\n    dispatch(updateMessageQueue( /*#__PURE__*/_jsxDEV(MessageReceiveLayout, {\n      sender: sender,\n      content: message,\n      date: sumited_at\n    }, sumited_at, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pannelBound\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContentChat\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"recevierQueue\",\n          xs: 13,\n          children: receiveQueue.map(ele => {\n            return ele;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"senderQueue\",\n          children: senderQueue.map(({\n            message,\n            sumited_at\n          }, index) => {\n            console.log(`redux get ${message}`);\n            return /*#__PURE__*/_jsxDEV(MessageSenderLayout, {\n              content: message,\n              date: sumited_at\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 35\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePannel, \"9e4pG6Dvh26scjbm69HFtxrIs6Q=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = MessagePannel;\nexport default MessagePannel;\nvar _c;\n$RefreshReg$(_c, \"MessagePannel\");","map":{"version":3,"names":["React","useState","MessageSenderLayout","Row","Col","MessageReceiveLayout","useDispatch","useSelector","updateMessageQueue","jsxDEV","_jsxDEV","MessagePannel","socket","_s","receiveQueue","setReceiveQueue","messageQueue","addMessageQueue","cur_usr","state","user","profile","username","senderQueue","msgSlice","dispatch","on","sender","sendTo","message","sumited_at","console","log","content","date","fileName","_jsxFileName","lineNumber","columnNumber","className","children","xs","map","ele","index","_c","$RefreshReg$"],"sources":["/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js"],"sourcesContent":["import React  ,{useState} from 'react'\nimport './css/MessagePannel.css'\nimport MessageSenderLayout from './MessageSenderLayout'\nimport {Row ,Col } from 'react-bootstrap'\nimport MessageReceiveLayout from './MessageReceiveLayout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateMessageQueue } from '../../../features/Messages'\nconst MessagePannel = ({socket}) => {\n   \n    const [ receiveQueue,setReceiveQueue] = useState([])\n    const [messageQueue,addMessageQueue] = useState([]);\n    const  cur_usr = useSelector(state => state.user.profile.username);\n\n    const senderQueue = useSelector(state => state.msgSlice.senderQueue);\n    const dispatch = useDispatch();\n    // #message receive lisitener\n    socket.on(\"message\", ({sender ,sendTo ,message ,sumited_at})=>{\n\n        console.log(`current usr is ${cur_usr}`)\n        dispatch(updateMessageQueue(\n                <MessageReceiveLayout \n                    key={sumited_at}\n                    sender={sender}\n                    content={message}\n                    date={sumited_at}\n                />            \n        ))  \n      })\n    \n\n  return (\n    <div className='pannelBound'>\n        <div className='mainContentChat'>\n                <Row>\n                    <Col className='recevierQueue' xs={13}>\n                       {\n                            receiveQueue.map(ele => {\n                                return ele;\n                            })\n                       }\n                    </Col>\n                    <Col className='senderQueue'>\n                        {\n                         senderQueue.map(({message, sumited_at},index) => {\n                            console.log(`redux get ${message}`)\n                          return  <MessageSenderLayout\n                                        key={index}\n                                        content={message}\n                                        date={sumited_at}\n                                />\n\n                         })\n\n                        }\n                        \n                    \n                    </Col>\n\n                </Row>\n            </div>\n    </div>\n  )\n}\n\nexport default MessagePannel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}