{"ast":null,"code":"var _jsxFileName = \"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './css/MessagePannel.css';\nimport MessageSenderLayout from './MessageSenderLayout';\nimport { Row, Col } from 'react-bootstrap';\nimport MessageReceiveLayout from './MessageReceiveLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMessageQueue } from '../../../features/Messages';\nimport { format } from 'date-fns';\nimport SendBtn from './SendBtn';\nimport { QueryCache, useInfiniteQuery, useQuery, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePannel = ({\n  socket,\n  cur_user\n}) => {\n  _s();\n  const ref_Bottom = useRef(null);\n  const {\n    chatId\n  } = useSelector(state => state.msgSlice.MessageHeader);\n  const messageQueue = useSelector(state => state.msgSlice.messageQueue);\n  const user = useSelector(state => state.user.profile);\n  // #message receive lisitener\n  console.log(chatId);\n  const client = useQueryClient();\n  const dispatch = useDispatch();\n  const [msgQueue, setMsgQueue] = useState([]);\n  // console.log(\"Catch obtain\",result)\n  useEffect(() => {\n    socket.on(\"message\", payload => {\n      console.log(\"payload gotted\", payload);\n      // setMsgQueue([...msgQueue , payload] )\n      dispatch(updateMessageQueue(payload));\n    });\n  }, []);\n  const getRecord = page => {\n    console.log(page);\n    let url = `http://127.0.0.1:4085/nusrRoute/getMessageByToken?token=${chatId}&page=${page}`;\n    return axios.get(url, {\n      headers: {\n        Authorization: user.access_Token\n      }\n    }).then(res => res.data);\n  };\n  const fetchData = () => {\n    console.log(\"fetch\");\n  };\n  const baseRecord = useQuery({\n    queryKey: [\"getMessageByToken\", chatId, 0],\n    queryFn: getRecord(0),\n    enabled: chatId !== \"\"\n  });\n  if (baseRecord.isFetched) {\n    console.log(\"done\");\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pannelBound\",\n      onScroll: fetchData,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContentChat\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: messageQueue.map(({\n            sender,\n            sendTo,\n            sumited_at,\n            message\n          }, index) => {\n            if (cur_user === sendTo) {\n              return /*#__PURE__*/_jsxDEV(MessageReceiveLayout, {\n                content: message,\n                date: sumited_at,\n                sender: sender\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 43\n              }, this);\n            } else if (cur_user === sender) {\n              return /*#__PURE__*/_jsxDEV(MessageSenderLayout, {\n                content: message,\n                date: sumited_at\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 44\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref_Bottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SendBtn, {\n      socket: socket,\n      msgQueue: msgQueue,\n      setMsgQueue: setMsgQueue,\n      ref_Bottom: ref_Bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePannel, \"uqXoLYm5+rWeNKya6Ic4KY4Kk34=\", false, function () {\n  return [useSelector, useSelector, useSelector, useQueryClient, useDispatch, useQuery];\n});\n_c = MessagePannel;\nexport default MessagePannel;\nvar _c;\n$RefreshReg$(_c, \"MessagePannel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MessageSenderLayout","Row","Col","MessageReceiveLayout","useDispatch","useSelector","updateMessageQueue","format","SendBtn","QueryCache","useInfiniteQuery","useQuery","useQueryClient","axios","jsxDEV","_jsxDEV","MessagePannel","socket","cur_user","_s","ref_Bottom","chatId","state","msgSlice","MessageHeader","messageQueue","user","profile","console","log","client","dispatch","msgQueue","setMsgQueue","on","payload","getRecord","page","url","get","headers","Authorization","access_Token","then","res","data","fetchData","baseRecord","queryKey","queryFn","enabled","isFetched","Fragment","children","className","onScroll","map","sender","sendTo","sumited_at","message","index","content","date","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js"],"sourcesContent":["import React  ,{useEffect, useRef, useState} from 'react'\nimport './css/MessagePannel.css'\nimport MessageSenderLayout from './MessageSenderLayout'\nimport {Row ,Col } from 'react-bootstrap'\nimport MessageReceiveLayout from './MessageReceiveLayout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateMessageQueue } from '../../../features/Messages'\nimport {format } from 'date-fns'\nimport SendBtn from './SendBtn'\nimport { QueryCache, useInfiniteQuery, useQuery, useQueryClient } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst MessagePannel = ({socket,cur_user }) => {\n\n    const ref_Bottom =useRef(null);\n    \n    const {chatId} =  useSelector(state=> state.msgSlice.MessageHeader);\n    const messageQueue =  useSelector(state=> state.msgSlice.messageQueue);\n    const user =  useSelector(state=> state.user.profile);\n    // #message receive lisitener\n    console.log(chatId)\n    \n    const client = useQueryClient();\n    const dispatch = useDispatch();\n\n    const [msgQueue, setMsgQueue]= useState([]);\n    // console.log(\"Catch obtain\",result)\n    useEffect(()=>{\n\n            socket.on(\"message\", (payload)=>{\n                console.log(\"payload gotted\",payload)\n                // setMsgQueue([...msgQueue , payload] )\n                dispatch(updateMessageQueue(payload))\n            \n            })\n\n    },[])\n    \n\n    const getRecord = (page)=>{\n        console.log(page)\n        let url = `http://127.0.0.1:4085/nusrRoute/getMessageByToken?token=${chatId}&page=${page}`\n        return axios.get(url,{\n            headers: { Authorization :user.access_Token}\n        }).then( res => res.data)\n    }\n   \n\n    const fetchData =()=>{\n        console.log(\"fetch\")\n    }\n\n    const baseRecord = useQuery({\n        queryKey: [\"getMessageByToken\" , chatId , 0],\n        queryFn :getRecord(0),\n        enabled : chatId!==\"\"\n    })\n\n    if(baseRecord.isFetched){ \n        console.log(\"done\")\n    }\n\n\n\n     \n    \n\n  return (\n    <React.Fragment>\n        <div className='pannelBound'  onScroll={fetchData}>\n            <div className='mainContentChat'>\n                    <Row >\n                        {\n\n                            messageQueue.map(({sender,sendTo , sumited_at ,message} ,index)=>{\n                              if(cur_user===sendTo){\n                                  return (<MessageReceiveLayout content={message} date={sumited_at} sender={sender} key={index}  />)\n                              \n                                }else if(cur_user=== sender){\n                                    return <MessageSenderLayout content={message}  date={sumited_at}  key={index}/>\n                                }\n\n                            })\n                        } \n                    </Row>\n                    <div ref={ref_Bottom}></div>\n                </div>\n        </div>\n        <SendBtn socket={socket} msgQueue={msgQueue} setMsgQueue={setMsgQueue} ref_Bottom={ref_Bottom} />\n    </React.Fragment>\n  )\n}\n\nexport default MessagePannel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}