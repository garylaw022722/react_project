{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport Action from \"../Pages/ChatRoot/componet/Action\";\nlet MSG_initState = {\n  MessageHeader: {\n    sendTo: '',\n    sender: '',\n    chatId: ''\n  },\n  messageQueue: [],\n  senderStatus: '',\n  openTheChat: false\n};\nconst MessageSlice = createSlice({\n  name: \"msgSlice\",\n  initialState: MSG_initState,\n  reducers: {\n    updateSenderTarget: (state, Action) => {\n      state.MessageHeader = Action.payload;\n    },\n    updateMessageQueue: (state, Action) => {\n      state.messageQueue = [...state.messageQueue, Action.payload];\n    },\n    updateSenderStatus: (state, Action) => {\n      state.senderStatus = Action.payload;\n    },\n    updateOpenTheChat: (state, Action) => {\n      state.openTheChat = Action;\n    },\n    prependMessageQueue: (state, Action) => {\n      state.messageQueue = [...Action.payload, ...state.messageQueue];\n    }\n  }\n});\nexport const {\n  updateOpenTheChat,\n  updateSenderTarget,\n  updateMessageQueue,\n  updateSenderStatus\n} = MessageSlice.actions;\nexport default MessageSlice.reducer;","map":{"version":3,"names":["createSlice","Action","MSG_initState","MessageHeader","sendTo","sender","chatId","messageQueue","senderStatus","openTheChat","MessageSlice","name","initialState","reducers","updateSenderTarget","state","payload","updateMessageQueue","updateSenderStatus","updateOpenTheChat","prependMessageQueue","actions","reducer"],"sources":["/Users/law/Desktop/Prog/react_project/chatui/src/features/Messages.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport Action from \"../Pages/ChatRoot/componet/Action\"\n        \nlet MSG_initState ={\n        MessageHeader :{\n                sendTo : '',\n                sender : '',\n                chatId:''\n        },\n        messageQueue: [],\n        senderStatus :'',\n        openTheChat : false\n        \n    \n}\n\nconst MessageSlice =  createSlice({\n    name: \"msgSlice\", \n    initialState:MSG_initState,\n    reducers:{\n       updateSenderTarget:(state,Action)=>{\n            state.MessageHeader =Action.payload;\n\n       },\n\n       updateMessageQueue :(state, Action)=>{\n\n            state.messageQueue = [...state.messageQueue , Action.payload]\n       },\n       updateSenderStatus :(state,Action)=>{\n                state.senderStatus = Action.payload;\n       },\n       updateOpenTheChat : (state, Action)=> {\n                state.openTheChat = Action\n       },\n       prependMessageQueue :(state , Action)=>{\n        state.messageQueue = [...Action.payload , ...state.messageQueue]\n\n       }\n\n        \n        \n    }\n})\nexport const {updateOpenTheChat ,updateSenderTarget , updateMessageQueue, updateSenderStatus} =MessageSlice.actions;\n\nexport default MessageSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mCAAmC;AAEtD,IAAIC,aAAa,GAAE;EACXC,aAAa,EAAE;IACPC,MAAM,EAAG,EAAE;IACXC,MAAM,EAAG,EAAE;IACXC,MAAM,EAAC;EACf,CAAC;EACDC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,WAAW,EAAG;AAGtB,CAAC;AAED,MAAMC,YAAY,GAAIV,WAAW,CAAC;EAC9BW,IAAI,EAAE,UAAU;EAChBC,YAAY,EAACV,aAAa;EAC1BW,QAAQ,EAAC;IACNC,kBAAkB,EAACA,CAACC,KAAK,EAACd,MAAM,KAAG;MAC9Bc,KAAK,CAACZ,aAAa,GAAEF,MAAM,CAACe,OAAO;IAExC,CAAC;IAEDC,kBAAkB,EAAEA,CAACF,KAAK,EAAEd,MAAM,KAAG;MAEhCc,KAAK,CAACR,YAAY,GAAG,CAAC,GAAGQ,KAAK,CAACR,YAAY,EAAGN,MAAM,CAACe,OAAO,CAAC;IAClE,CAAC;IACDE,kBAAkB,EAAEA,CAACH,KAAK,EAACd,MAAM,KAAG;MAC3Bc,KAAK,CAACP,YAAY,GAAGP,MAAM,CAACe,OAAO;IAC5C,CAAC;IACDG,iBAAiB,EAAGA,CAACJ,KAAK,EAAEd,MAAM,KAAI;MAC7Bc,KAAK,CAACN,WAAW,GAAGR,MAAM;IACnC,CAAC;IACDmB,mBAAmB,EAAEA,CAACL,KAAK,EAAGd,MAAM,KAAG;MACtCc,KAAK,CAACR,YAAY,GAAG,CAAC,GAAGN,MAAM,CAACe,OAAO,EAAG,GAAGD,KAAK,CAACR,YAAY,CAAC;IAEjE;EAIH;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACY,iBAAiB;EAAEL,kBAAkB;EAAGG,kBAAkB;EAAEC;AAAkB,CAAC,GAAER,YAAY,CAACW,OAAO;AAEnH,eAAeX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}