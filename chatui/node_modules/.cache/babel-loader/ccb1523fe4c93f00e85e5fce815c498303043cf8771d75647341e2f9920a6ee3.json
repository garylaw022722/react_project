{"ast":null,"code":"var _jsxFileName = \"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Row, Stack, Col } from 'react-bootstrap';\nimport './css/contactITEM.css';\nimport { format } from 'date-fns';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateSenderTarget } from '../../../features/Messages';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactITEM = ({\n  icon,\n  name,\n  lastestMSG,\n  dateTime,\n  chatToken,\n  setOuterQueue\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const username = useSelector(state => state.user.profile.username);\n  let date = format(new Date(dateTime), \"dd/MM/yyyy\");\n  const client = useQueryClient();\n  const fetChatRecord = () => {\n    var _client$getQueryData;\n    const data = {\n      sendTo: name[0],\n      sender: username,\n      chatId: chatToken\n    };\n    console.log(data);\n    const result = (_client$getQueryData = client.getQueryData([\"getContactList\"])) === null || _client$getQueryData === void 0 ? void 0 : _client$getQueryData.data.filter(privateRoom => {\n      return privateRoom.privateRoom_Token === chatToken;\n    })[0][\"sources\"];\n    setOuterQueue(result);\n    console.log(\"result data\", result);\n    dispatch(updateSenderTarget(data));\n    console.log(\"the queue is clear.......\");\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"horizontal\",\n    className: \"Contact_itemContainer\",\n    gap: 3,\n    onClick: fetChatRecord,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      style: {\n        width: \"80%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemDateTime\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"latestMSG w-8\",\n        children: lastestMSG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactITEM, \"781XsLzUk1sDyH43OGNMwmYWMWA=\", false, function () {\n  return [useDispatch, useSelector, useQueryClient];\n});\n_c = ContactITEM;\nexport default ContactITEM;\nvar _c;\n$RefreshReg$(_c, \"ContactITEM\");","map":{"version":3,"names":["React","Row","Stack","Col","format","useDispatch","useSelector","updateSenderTarget","useQueryClient","jsxDEV","_jsxDEV","ContactITEM","icon","name","lastestMSG","dateTime","chatToken","setOuterQueue","_s","dispatch","username","state","user","profile","date","Date","client","fetChatRecord","_client$getQueryData","data","sendTo","sender","chatId","console","log","result","getQueryData","filter","privateRoom","privateRoom_Token","direction","className","gap","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js"],"sourcesContent":["import React from 'react'\nimport { Row, Stack ,Col } from 'react-bootstrap'\nimport './css/contactITEM.css'\nimport {format} from 'date-fns'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateSenderTarget } from '../../../features/Messages'\nimport { useQueryClient  } from '@tanstack/react-query'\n\n\nconst ContactITEM = ({icon ,name, lastestMSG ,dateTime , chatToken   ,setOuterQueue}) => {\n  \n  const dispatch = useDispatch()\n  const username =  useSelector(state => state.user.profile.username)\n  \n  let date = format(new Date(dateTime) , \"dd/MM/yyyy\");\n\n  \n  const client =useQueryClient();\n  const fetChatRecord=()=>{\n\n      const data = {\n            sendTo : name[0],\n            sender : username,\n            chatId:chatToken\n        }\n\n      console.log(data)\n      const result = client.getQueryData([\"getContactList\"])?.data                         \n                .filter( (privateRoom)=> {\n                    return privateRoom.privateRoom_Token === chatToken\n                })[0][\"sources\"]\n      setOuterQueue(result)\n      console.log(\"result data\" , result)                \n      \n      \n      dispatch(updateSenderTarget(data));\n\n      console.log(\"the queue is clear.......\")\n  } \n    \n\n\n  return (\n                  \n    <Stack direction='horizontal' className=\"Contact_itemContainer\" gap={3} onClick={fetChatRecord}>\n        <div className=\"icon\" ></div>\n        <div className=\"details\" style={{width:\"80%\"}}>\n                <div className='itemDateTime'>{date}</div>\n                <div className='name'>{name}</div>\n                <div className='latestMSG w-8'>{lastestMSG}</div>\n        </div>\n    </Stack>\n  )\n}\n\nexport default ContactITEM\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}