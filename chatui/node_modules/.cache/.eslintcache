[{"/Users/law/Desktop/Prog/react_project/chatui/src/index.tsx":"1","/Users/law/Desktop/Prog/react_project/chatui/src/App.tsx":"2","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/ChatRoom.js":"3","/Users/law/Desktop/Prog/react_project/chatui/src/config/RotueTable.jsx":"4","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/Login/LoginPages.js":"5","/Users/law/Desktop/Prog/react_project/chatui/src/api/getData.js":"6","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Search.js":"7","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Action.js":"8","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ShortList.js":"9","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageTo.js":"10","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js":"11","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageSenderLayout.js":"12","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageReceiveLayout.js":"13","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js":"14","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/SendBtn.js":"15","/Users/law/Desktop/Prog/react_project/chatui/src/app/store.js":"16","/Users/law/Desktop/Prog/react_project/chatui/src/features/userProfile.js":"17","/Users/law/Desktop/Prog/react_project/chatui/src/features/Messages.js":"18","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/UserRegistration/Registration.js":"19","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactCreateForm.js":"20"},{"size":307,"mtime":1693325961355,"results":"21","hashOfConfig":"22"},{"size":629,"mtime":1693464958255,"results":"23","hashOfConfig":"22"},{"size":2610,"mtime":1694018608654,"results":"24","hashOfConfig":"22"},{"size":723,"mtime":1694076538871,"results":"25","hashOfConfig":"22"},{"size":3093,"mtime":1693465591245,"results":"26","hashOfConfig":"22"},{"size":659,"mtime":1693503232953,"results":"27","hashOfConfig":"22"},{"size":827,"mtime":1693381292675,"results":"28","hashOfConfig":"22"},{"size":851,"mtime":1693979147343,"results":"29","hashOfConfig":"22"},{"size":2075,"mtime":1694071780956,"results":"30","hashOfConfig":"22"},{"size":1254,"mtime":1693722690919,"results":"31","hashOfConfig":"22"},{"size":3986,"mtime":1694076173799,"results":"32","hashOfConfig":"22"},{"size":466,"mtime":1693497234873,"results":"33","hashOfConfig":"22"},{"size":511,"mtime":1693494696775,"results":"34","hashOfConfig":"22"},{"size":1440,"mtime":1694020575472,"results":"35","hashOfConfig":"22"},{"size":3711,"mtime":1694067107103,"results":"36","hashOfConfig":"22"},{"size":285,"mtime":1693543025400,"results":"37","hashOfConfig":"22"},{"size":620,"mtime":1693463740510,"results":"38","hashOfConfig":"22"},{"size":1385,"mtime":1694019694890,"results":"39","hashOfConfig":"22"},{"size":2214,"mtime":1694076211063,"results":"40","hashOfConfig":"22"},{"size":2143,"mtime":1694018469554,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"d9s00",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"53"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"53"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"53"},"/Users/law/Desktop/Prog/react_project/chatui/src/index.tsx",[],[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/App.tsx",[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/ChatRoom.js",["119","120","121","122","123","124","125"],[],"import React, { useState } from 'react'\nimport {io} from 'socket.io-client'\nimport {useForm} from 'react-hook-form'\nimport * as Yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Container, Stack ,Row,Col} from 'react-bootstrap';\nimport Action from '../ChatRoot/componet/Action';\nimport Search from '../ChatRoot/componet/Search';\nimport ChatRecord from './componet/ShortList';\nimport ShortList from './componet/ShortList';\nimport MessageTo from './componet/MessageTo';\nimport MessagePannel from './componet/MessagePannel';\nimport SendBtn from './componet/SendBtn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUpSocket } from '../../features/userProfile';\nimport  ContactCreateForm from './componet/ContactCreateForm'\nconst ChatRoom = () => {\n\n  const [contactList ,setContactList] = useState([]);\n  let socket =  io(\"http://127.0.0.1:4085/ChatServer\");\n  const {username ,access_Token} = useSelector(state => state.user.profile)\n  const {openTheChat,createNewContect} = useSelector(state => state.msgSlice);\n\n\n  // # map the user  to the socket\n  socket.emit(\"Logined\", username)\n\n  socket.on(\"core\", (...args)=>{\n      console.log(args)\n      socket.emit(\"jointRoom\",\"ksksksks\");\n  })\n\n\n\n  socket.on(\"ChatLog\" ,data=>{\n    console.log(\"GetChating Log......\")\n    console.log(data)\n  })\n  \n\n  \n\n  return (\n    <React.Fragment>\n\n    <Container fluid={true}  >\n      <Row  style={{border:\"1px solid red\" ,height:\"100vh\"}}>\n        <Col style={{border :\"1px solid red\" ,padding:'0'}} xs={3}> \n          <Stack>\n            <Action username={username} socket={socket}/>\n              {\n                createNewContect ?\n                <ContactCreateForm access_token={access_Token} />\n                \n                :<div>\n                  <Search />\n                  <ShortList  setContactList={setContactList} contactList={contactList} />\n                </div>\n              }\n         \n          </Stack>\n        </Col>\n        <Col style={{padding:'0'}} xs={9}>\n          \n          <Stack hidden={!openTheChat}>\n              <MessageTo socket={socket}/>\n              <MessagePannel socket={socket} cur_user={username} />\n          </Stack>\n          <div  hidden={openTheChat}\n                style={{\n                        textAlign:\"center\" ,\n                        paddingTop:\"45vh\",\n                        backgroundColor:\"#e9edef\",\n                        height :\"100%\"\n                  }}>Select a contact user from the list</div>\n        </Col>\n      </Row>\n    </Container>\n\n    </React.Fragment>\n\n    \n  )\n}\n\nexport default ChatRoom\n",[],"/Users/law/Desktop/Prog/react_project/chatui/src/config/RotueTable.jsx",[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/Login/LoginPages.js",["126","127","128","129","130"],[],"import React ,{useState}from 'react'\nimport {login_Api} from '../../api/getData'\nimport {useQuery , useMutation , useQueryClient} from '@tanstack/react-query'\nimport {Row, Col , Form , FormGroup , FormControl ,FormLabel, Container, Button} from 'react-bootstrap'\nimport {useForm} from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup' \nimport * as Yup from 'yup'\nimport './Login.css'\n\nimport { Link } from 'react-router-dom'\nimport {useDispatch ,useSelector} from 'react-redux'\nimport userProfile, {createProfile} from '../../features/userProfile'\nimport  { useNavigate } from 'react-router-dom'\n \nconst LoginPages = () => {\n  const queryClient = useQueryClient();\n  const nav =useNavigate();\n  const [isSuccessLogin, setLoginFail] = useState(true);\n    \n  const  formSchema = Yup.object().shape({\n    email: Yup.string()\n    .required(\"Email address is required !\"),\n    \n    password: Yup.string()\n    .max(process.env.REACT_APP_PASSWORD_LENGTH ,process.env.REACT_APP_PASSWORD_LENGTH_Execption_MSG)\n    \n  })\n  const {register , handleSubmit  ,formState:{errors}} = useForm({resolver: yupResolver(formSchema)})\n  \n  const dispatch = useDispatch()\n \n  const submit =async(formData)=>\n  {\n    \n    const res  =await login_Api(formData);\n    console.log(\"called\")\n    \n    let profile = {\n      username: formData.email,\n      access_Token : res.access_Token\n    }\n    if(res?.access_Token) {\n      dispatch(createProfile(profile))\n      nav(\"/chatRoom\");\n    }else{\n      console.log(\"login fail\")\n      setLoginFail(false);\n    }\n  }\n \n  \n\n\n                                \n\n  return (\n    <Container className='LoginContainer h-100' fluid={true}>\n        <Row  style={{height:'100vh'}}>\n          <Col className='emptySpace' xs={8}></Col>\n          <Col className='p-4 '>\n              <Form>\n                <legend>Login</legend>\n                <FormGroup className='mb-4'>\n                  <FormLabel>Username</FormLabel>\n                  <FormControl \n                    type='text'\n                    {...register(\"email\")}\n                  />\n                  <Form.Text>{errors.email?.message}</Form.Text>\n                </FormGroup>\n                <FormGroup className='mb-4'> \n                  <FormLabel>Password</FormLabel>\n                  <FormControl \n                    type='password'\n                    {...register(\"password\")}\n                    />\n                    <Form.Text>{errors.password?.message}</Form.Text>\n                </FormGroup>\n                <FormGroup hidden={isSuccessLogin}><FormLabel>email or password is not correct </FormLabel></FormGroup>\n              </Form>\n                <Button \n                      style={{backgroundColor:\"rgb(59, 72, 117)\" , border:'none'}}\n                      className=\"w-100 btnLogin p-2 card-subtitle-1\" \n                      onClick={handleSubmit(submit)}>Sign in</Button>\n                <Link to=\"/Registration\" className='registeration_dir card-subtitle-1' > Register new Account</Link>\n          </Col>\n        </Row>\n    </Container>\n  )\n}\n\nexport default LoginPages","/Users/law/Desktop/Prog/react_project/chatui/src/api/getData.js",["131"],[],"import React from 'react'\nimport axios from \"axios\";\n\n\n    \nexport const login_Api =async(formData)=>{\n\n        let url = process.env.REACT_APP_API_BASE_URL+\"/authetication\" ;\n        const res = await axios.post(url ,formData)\n        console.log(res.data);\n        return res.data;\n}\n\nexport const getContactList =async(token)=>{\n        try{\n\n            let url = \"http://127.0.0.1:4085/nusrRoute/getPrivateMessage\";\n            const res= await axios.get(url,{\n                headers :{\n                    Authorization :token\n                }\n            })\n            return  res.data\n        }catch(err){\n            console.log(err);\n        }\n}\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Search.js",["132","133"],[],"import React, { useState } from 'react'\nimport {Button, Form, Stack} from 'react-bootstrap'\nconst Search = () => {\n  const [keywords, setKeywords] = useState(\"\");\n  const [color , backgroundColor] = useState(\"blue\")\n  const onhover= (e)=>{\n    \n  }\n\n  return (\n    <Stack \n          gap={3} \n          direction='horizontal'\n          style={{\n            padding:\"10px\",\n            borderBottom:\"1px solid gan\"\n          }}\n    >\n\n      <Form.Control \n        type=\"text\"\n        value={keywords}\n        onChange={(e)=> setKeywords(e.target.value)}\n        placeholder='Enter the email address'\n        />\n        <Button className='btn bg-light text-info'\n            style={{\n              border:\"none\",\n            }}\n          onMouseOver={onhover}\n        >Search</Button>\n      </Stack>\n\n  )\n}\n\nexport default Search\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Action.js",["134","135"],[],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Nav,Navbar , NavDropdown, Stack} from 'react-bootstrap';\nimport {createNewContectFn} from '../../../features/Messages'\n\nconst Action = ({username}) => {\n\n  const dispatch = useDispatch()\n\n\n  return (\n    <Nav className=\"\" style={{ height:\"10vh\",borderBottom:\"3px solid #d1d1e0\" ,}}>\n      <Stack direction='horizontal' gap={2} style={{ width:\"100%\",margin:\"15px\"}}>\n        <div className='w-75'> {username}</div>\n        <NavDropdown title=\"Action\" >\n                <NavDropdown.Item  onClick={()=>dispatch(createNewContectFn(true))}>Create New Contact</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item>Logout</NavDropdown.Item>         \n        </NavDropdown>\n      </Stack>\n\n\n    </Nav>\n  )\n}\n\nexport default Action","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ShortList.js",["136","137","138","139","140","141","142","143","144"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageTo.js",["145"],[],"import React, { useState } from 'react'\nimport './css/MessageTo.css'\nimport { Row, Col ,Stack} from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { updateSenderStatus } from '../../../features/Messages'\nconst MessageTo = ({socket}) => {\n\n  const header = useSelector(state=>state.msgSlice.MessageHeader)\n  const [status ,setStatus] = useState('');\n  const [isTyping ,setTpying] =useState(false);\n  \n  \n  socket.emit(\"onlineChecking\",header);\n  \n  socket.on(\"typing\", (res_isTyping)=>{\n    console.log(\"isTpying ?\" ,res_isTyping)\n    setTpying(res_isTyping)\n\n    isTyping ? setStatus(\"typing...\") :setStatus(\"\")\n  })\n  \n  socket.on(\"onlineChecking\" , (onlineStatus)=>{\n    console.log(\"Your status is retrieved \", onlineStatus);\n    console.log(status===\"\")\n        !isTyping && setStatus(onlineStatus)\n\n  })\n\n\n  return (\n    <div className='sendToBound'>\n        <Row>\n            <Col xs={1}>\n                <div className='imageBox'></div>\n            </Col>\n            <Col>\n            <Stack  direction=\"vertical\" gap={1}>\n                <div>{header.sendTo}</div>\n                <div className='typing'>{status}</div>\n\n            </Stack>\n            </Col>\n        </Row>\n     \n    </div>\n  )\n}\n\nexport default MessageTo\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageSenderLayout.js",["161"],[],"import React from 'react'\nimport './css/MessageSenderLayout.css'\nimport {Row ,Col, Stack} from 'react-bootstrap'\nconst MessageSenderLayout = ({ content  ,date}) => {\n  return (\n      <Row className='mb-3 msgLayout_sender' >\n        <Col ></Col>\n        <Col  className=\"Sender_MainContent\" >\n            <div className='content'>{content}</div> \n            <div className='date'>{date}</div>\n        </Col>\n      </Row>\n\n  )\n}\n\n\n\nexport default MessageSenderLayout\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageReceiveLayout.js",["162","163"],[],"import React from 'react'\nimport './css/MessageReceiveLayout.css'\nimport { Col ,Row } from 'react-bootstrap'\nconst MessageReceiveLayout = ({ sender,content ,date}) => {\n  return (\n    <Col className='recevierQueue' xs={13}>\n        <div className='msgLayout w-50 mb-3' xs={13}>\n            <div className='sender mb-2'>{sender}</div> \n            <div className='content'>{content}</div>\n            <div className='date'>{date}</div>\n        </div>\n    </Col>\n      \n  )\n}\n\nexport default MessageReceiveLayout\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js",["164","165","166","167"],[],"import React from 'react'\nimport { Row, Stack ,Col } from 'react-bootstrap'\nimport './css/contactITEM.css'\nimport {format} from 'date-fns'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateOpenTheChat, updateSenderTarget } from '../../../features/Messages'\nimport { useQueryClient  } from '@tanstack/react-query'\nimport { Socket } from 'socket.io-client'\n\n\nconst ContactITEM = ({icon ,name, lastestMSG ,dateTime , chatToken   ,setOuterQueue}) => {\n  \n  const dispatch = useDispatch()\n  const username =  useSelector(state => state.user.profile.username)\n  \n  let date = format(new Date(dateTime) , \"dd/MM/yyyy\");\n\n  \n  \n  const client =useQueryClient();\n  const fetChatRecord=()=>{\n\n      const data = {\n            sendTo : name[0],\n            sender : username,\n            chatId:chatToken\n        }\n\n  \n      dispatch(updateSenderTarget(data));\n      dispatch(updateOpenTheChat(true));\n\n    \n\n      console.log(\"the queue is clear.......\")\n  } \n    \n\n\n  return (\n                  \n    <Stack direction='horizontal' className=\"Contact_itemContainer\" gap={3} onClick={fetChatRecord}>\n        <div className=\"icon\" ></div>\n        <div className=\"details\" style={{width:\"80%\"}}>\n                <div className='itemDateTime'>{date}</div>\n                <div className='name'>{name}</div>\n                <div className='latestMSG w-8'>{lastestMSG}</div>\n        </div>\n    </Stack>\n  )\n}\n\nexport default ContactITEM\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/SendBtn.js",["168","169","170","171","172","173","174","175","176","177"],[],"import React, { useState } from 'react'\nimport {Button, Form ,FormControl, Stack} from 'react-bootstrap'\n\nimport Axios  from 'axios'\nimport { useDispatch } from 'react-redux';\nimport {format} from 'date-fns'\nimport { date } from 'yup';\nimport moment, {Moment} from 'moment'\nimport MessageSenderLayout from './MessageSenderLayout';\nimport {updateMessageQueue} from '../../../features/Messages'\nimport {useSelector} from 'react-redux'\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { da } from 'date-fns/locale';\nconst SendBtn = ({socket ,msgQueue ,setMsgQueue ,ref_Bottom ,chatKey}) => {\n    const [msg ,setMsg] = useState('');\n    const client = useQueryClient()\n    const dispatch= useDispatch()    \n    const  senderInfo =  useSelector(state => state.msgSlice.MessageHeader)\n    const  {access_Token} =  useSelector(state => state.user.profile)\n\n    \n    const  updateChat = async(payload)=>{\n        try{\n            console.log(payload)\n            await axios.post(\"http://127.0.0.1:4085/nusrRoute/backup\" ,payload,{\n                headers:{\n                    Authorization : access_Token\n                }\n            })\n            return \"success\"\n        }catch(err){\n            console.log(err)\n            return  \"fail\"\n        }\n    }\n    \n    \n    const {mutate,} = useMutation(\n            async(payload)=> await  updateChat( payload),\n            {\n                onSuccess :(data)=>{\n                    client.invalidateQueries(chatKey)\n                    client.invalidateQueries([process.env.REACT_APP_REACT_KEY_GET_CONTACT_LIST])\n                }\n            }\n        )\n    \n        const sendMutation = ()=>{\n\n        const sendDate =new Date();\n        const timestamp = format(sendDate ,process.env.REACT_APP_DATE_FORMAT)\n        \n        console.log(timestamp)\n        const payload = {...senderInfo ,message : msg,sumited_at: sendDate}\n        \n        socket.emit(\"message\" , payload)\n        mutate(payload)\n\n\n\n        \n        setMsg('')\n        ref_Bottom?.current?.scrollIntoView({ behavior: 'smooth' });\n\n\n        \n    }\n\n\n\n    const send = ()=>{\n        const sendDate =new Date();\n        const timestamp = format(sendDate ,process.env.REACT_APP_DATE_FORMAT)\n        \n        console.log(timestamp)\n        const payload = {...senderInfo ,message : msg,sumited_at: sendDate}\n        \n        console.log(payload)\n        socket.emit(\"message\" , payload)\n        payload.sumited_at = timestamp;\n        \n        setMsg('')\n        ref_Bottom?.current?.scrollIntoView({ behavior: 'smooth' });\n\n        \n  \n            \n    }\n    const focusout=(e)=>{\n        socket.emit(\"typing\" ,{...senderInfo, isTyping:false})\n    }\n    const typing=(e)=>{\n        console.log(\"I am typing\")\n        socket.emit(\"typing\" ,{...senderInfo, isTyping:true})\n        setMsg(e.target.value);\n\n\n    }\n    const SENDBTN_CSS = {\n                        width: \"0\",\n                        height: \"0\",\n                        borderTop: \"10px solid transparent\",\n                        borderBottom: \"10px solid transparent\",\n                        borderLeft:\"10px solid #f2f0f5\",                       \n        }\n            \n  return (\n    <Stack direction='horizontal' gap={3} style={{padding:\"10px\"}}>\n\n        <FormControl\n            style={{backgroundColor:\"rgba(198, 219, 227, 0.8) \"}}\n            type=\"text\"\n            placeholder='Enter your message here'\n            value={msg}\n            onChange={(e)=>typing(e)}\n            onBlur={(e)=>focusout(e)}\n            />\n        <Button onClick={sendMutation}> \n            <div style={SENDBTN_CSS}></div>\n        </Button>\n\n        </Stack>\n  )\n}\n\nexport default SendBtn\n",[],"/Users/law/Desktop/Prog/react_project/chatui/src/app/store.js",["178"],[],"import { configureStore ,applyMiddleware } from '@reduxjs/toolkit'\nimport  profileReducer from '../features/userProfile'\nimport  messages from '../features/Messages'\n\nexport const store= configureStore({\n    reducer:{\n        user :  profileReducer,\n        msgSlice:messages\n    } \n})","/Users/law/Desktop/Prog/react_project/chatui/src/features/userProfile.js",["179","180"],[],"import {createSlice ,nanoid} from '@reduxjs/toolkit'\nimport Action from '../Pages/ChatRoot/componet/Action';\n\nconst initState = { \n    profile : {username:'/NA' , access_Token : ''} ,\n    socket : {}\n}\n\nconst  profileSlice = createSlice({\n    name :\"user\",\n    initialState:initState,\n    reducers:{\n        createProfile: (state ,Action)=>{\n            state.profile = Action.payload;\n        },\n        setUpSocket :(state, Action)=>{\n            state.socket = Action.payload  \n        }\n       \n        \n    }\n})\nexport const {createProfile ,setUpSocket} =profileSlice.actions;\n\nexport default profileSlice.reducer;\n","/Users/law/Desktop/Prog/react_project/chatui/src/features/Messages.js",["181"],[],"import { createSlice } from \"@reduxjs/toolkit\"\nimport Action from \"../Pages/ChatRoot/componet/Action\"\n        \nlet MSG_initState ={\n        MessageHeader :{\n                sendTo : '',\n                sender : '',\n                chatId:''\n        },\n        messageQueue: [],\n        senderStatus :'',\n        openTheChat : false,\n        createNewContect : false,\n        newContactor :[]\n        \n    \n}\n\nconst MessageSlice =  createSlice({\n    name: \"msgSlice\", \n    initialState:MSG_initState,\n    reducers:{\n       updateSenderTarget:(state,Action)=>{\n            state.MessageHeader =Action.payload;\n\n       },\n\n       updateMessageQueue :(state, Action)=>{\n\n            state.messageQueue = [...state.messageQueue , Action.payload]\n       },\n       updateSenderStatus :(state,Action)=>{\n                state.senderStatus = Action.payload;\n       },\n       updateOpenTheChat : (state, Action)=> {\n                state.openTheChat = Action\n       },\n       setMessageQueue :(state , Action)=>{\n        state.messageQueue = Action.payload;\n\n       },\n       createNewContectFn : (state, Action)=> {\n        state.createNewContect = Action.payload\n        },\n\n        \n        \n    }\n})\nexport const {createNewContectFn,setMessageQueue ,updateOpenTheChat ,updateSenderTarget , updateMessageQueue, updateSenderStatus} =MessageSlice.actions;\n\nexport default MessageSlice.reducer;\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/UserRegistration/Registration.js",["182","183"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactCreateForm.js",["184","185"],[],"import React, { useState } from 'react'\nimport {Button, Form ,Stack} from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport {createNewContectFn} from '../../../features/Messages'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst ContactCreateForm = ({access_token ,setContactList}) => {\n    const [contactUsr ,setContactUsr] = useState(\"\")\n    const [response ,setResponse] = useState(\"\")\n\n    const dispatch = useDispatch();\n\n    \n    const createNewContact = async(contactUser)=>{\n      const res = await axios.post(\n            `http://127.0.0.1:4085/nusrRoute/createContactUsr`,\n            {\n                contactUser: contactUser\n            },\n            {\n                headers:{\n                    Authorization: access_token\n                }\n            }\n        \n      )  \n        return res.data;\n\n      \n    }\n    \n    const {mutate ,errors}= useMutation( async (contactUser)=>await createNewContact(contactUser),{\n        onSuccess:({errorCode ,result})=>{\n            if(result){\n                setResponse(result)   \n\n            }else{\n                setResponse(errorCode)\n            }\n        },\n        enabled  :contactUsr !==\"\"\n    })\n\n   const call_API = ()=>{\n        mutate(contactUsr)\n   }\n\n\n  return (\n    <Form style={{padding:'20px'}}>\n        <Form.Group className='mb-4'>\n            <Form.Label>Contact users</Form.Label>\n             <Form.Control                 \n                type=\"text\" \n                className='mt-2'\n                value ={contactUsr}\n                onChange={(e)=>setContactUsr(e.target.value)}\n                placeholder='Enter the username'\n             />\n             <Form.Label className=\"w-100 mt-3\" style={{fontSize: '15px' , textAlign:\"center\",color:\"red\"}}>{response}</Form.Label>\n        </Form.Group>\n        <Stack gap={4}  style={{margin:\"auto\"}}>\n            <Button onClick={call_API}>Submit</Button>\n            <Button onClick={()=>dispatch(createNewContectFn(false))}>Return to Contact List </Button>\n        </Stack>\n\n    </Form>\n        \n      \n  )\n}\n\nexport default ContactCreateForm\n",{"ruleId":"186","severity":1,"message":"187","line":3,"column":9,"nodeType":"188","messageId":"189","endLine":3,"endColumn":16},{"ruleId":"186","severity":1,"message":"190","line":4,"column":13,"nodeType":"188","messageId":"189","endLine":4,"endColumn":16},{"ruleId":"186","severity":1,"message":"191","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"192","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":18},{"ruleId":"186","severity":1,"message":"193","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":15},{"ruleId":"186","severity":1,"message":"194","line":14,"column":10,"nodeType":"188","messageId":"189","endLine":14,"endColumn":21},{"ruleId":"186","severity":1,"message":"195","line":15,"column":10,"nodeType":"188","messageId":"189","endLine":15,"endColumn":21},{"ruleId":"186","severity":1,"message":"196","line":3,"column":9,"nodeType":"188","messageId":"189","endLine":3,"endColumn":17},{"ruleId":"186","severity":1,"message":"197","line":3,"column":20,"nodeType":"188","messageId":"189","endLine":3,"endColumn":31},{"ruleId":"186","severity":1,"message":"198","line":11,"column":22,"nodeType":"188","messageId":"189","endLine":11,"endColumn":33},{"ruleId":"186","severity":1,"message":"199","line":12,"column":8,"nodeType":"188","messageId":"189","endLine":12,"endColumn":19},{"ruleId":"186","severity":1,"message":"200","line":16,"column":9,"nodeType":"188","messageId":"189","endLine":16,"endColumn":20},{"ruleId":"186","severity":1,"message":"201","line":1,"column":8,"nodeType":"188","messageId":"189","endLine":1,"endColumn":13},{"ruleId":"186","severity":1,"message":"202","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"186","severity":1,"message":"203","line":5,"column":18,"nodeType":"188","messageId":"189","endLine":5,"endColumn":33},{"ruleId":"186","severity":1,"message":"198","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":34},{"ruleId":"186","severity":1,"message":"204","line":3,"column":13,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"186","severity":1,"message":"205","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"206","line":4,"column":9,"nodeType":"188","messageId":"189","endLine":4,"endColumn":23},{"ruleId":"186","severity":1,"message":"207","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":9,"column":20,"nodeType":"210","messageId":"211","endLine":9,"endColumn":22},{"ruleId":"186","severity":1,"message":"212","line":13,"column":10,"nodeType":"188","messageId":"189","endLine":13,"endColumn":21},{"ruleId":"186","severity":1,"message":"213","line":13,"column":23,"nodeType":"188","messageId":"189","endLine":13,"endColumn":37},{"ruleId":"186","severity":1,"message":"214","line":14,"column":16,"nodeType":"188","messageId":"189","endLine":14,"endColumn":25},{"ruleId":"186","severity":1,"message":"215","line":14,"column":37,"nodeType":"188","messageId":"189","endLine":14,"endColumn":42},{"ruleId":"216","severity":1,"message":"217","line":52,"column":32,"nodeType":"218","messageId":"219","endLine":52,"endColumn":34},{"ruleId":"186","severity":1,"message":"220","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":28},{"ruleId":"186","severity":1,"message":"205","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"221","line":1,"column":36,"nodeType":"188","messageId":"189","endLine":1,"endColumn":44},{"ruleId":"186","severity":1,"message":"222","line":4,"column":14,"nodeType":"188","messageId":"189","endLine":4,"endColumn":17},{"ruleId":"186","severity":1,"message":"194","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":21},{"ruleId":"186","severity":1,"message":"223","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":25},{"ruleId":"186","severity":1,"message":"224","line":7,"column":27,"nodeType":"188","messageId":"189","endLine":7,"endColumn":45},{"ruleId":"186","severity":1,"message":"225","line":8,"column":9,"nodeType":"188","messageId":"189","endLine":8,"endColumn":15},{"ruleId":"186","severity":1,"message":"226","line":10,"column":10,"nodeType":"188","messageId":"189","endLine":10,"endColumn":20},{"ruleId":"186","severity":1,"message":"196","line":10,"column":40,"nodeType":"188","messageId":"189","endLine":10,"endColumn":48},{"ruleId":"186","severity":1,"message":"227","line":64,"column":12,"nodeType":"188","messageId":"189","endLine":64,"endColumn":30},{"ruleId":"186","severity":1,"message":"214","line":64,"column":37,"nodeType":"188","messageId":"189","endLine":64,"endColumn":46},{"ruleId":"186","severity":1,"message":"228","line":64,"column":48,"nodeType":"188","messageId":"189","endLine":64,"endColumn":55},{"ruleId":"186","severity":1,"message":"229","line":64,"column":57,"nodeType":"188","messageId":"189","endLine":64,"endColumn":68},{"ruleId":"230","severity":1,"message":"231","line":75,"column":28,"nodeType":"232","messageId":"211","endLine":75,"endColumn":30},{"ruleId":"216","severity":1,"message":"233","line":95,"column":85,"nodeType":"218","messageId":"219","endLine":95,"endColumn":87},{"ruleId":"186","severity":1,"message":"234","line":3,"column":19,"nodeType":"188","messageId":"189","endLine":3,"endColumn":24},{"ruleId":"186","severity":1,"message":"222","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":13},{"ruleId":"186","severity":1,"message":"235","line":3,"column":15,"nodeType":"188","messageId":"189","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"235","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"222","line":2,"column":22,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"236","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":16},{"ruleId":"186","severity":1,"message":"237","line":20,"column":9,"nodeType":"188","messageId":"189","endLine":20,"endColumn":15},{"ruleId":"186","severity":1,"message":"238","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"239","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":13},{"ruleId":"186","severity":1,"message":"240","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":14},{"ruleId":"186","severity":1,"message":"241","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":14},{"ruleId":"186","severity":1,"message":"242","line":8,"column":17,"nodeType":"188","messageId":"189","endLine":8,"endColumn":23},{"ruleId":"186","severity":1,"message":"243","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":27},{"ruleId":"186","severity":1,"message":"224","line":10,"column":9,"nodeType":"188","messageId":"189","endLine":10,"endColumn":27},{"ruleId":"186","severity":1,"message":"244","line":14,"column":10,"nodeType":"188","messageId":"189","endLine":14,"endColumn":12},{"ruleId":"186","severity":1,"message":"245","line":18,"column":11,"nodeType":"188","messageId":"189","endLine":18,"endColumn":19},{"ruleId":"186","severity":1,"message":"246","line":72,"column":11,"nodeType":"188","messageId":"189","endLine":72,"endColumn":15},{"ruleId":"186","severity":1,"message":"247","line":1,"column":26,"nodeType":"188","messageId":"189","endLine":1,"endColumn":41},{"ruleId":"186","severity":1,"message":"248","line":1,"column":22,"nodeType":"188","messageId":"189","endLine":1,"endColumn":28},{"ruleId":"186","severity":1,"message":"249","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"249","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"250","line":6,"column":9,"nodeType":"188","messageId":"189","endLine":6,"endColumn":11},{"ruleId":"186","severity":1,"message":"251","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":13},{"ruleId":"186","severity":1,"message":"196","line":5,"column":23,"nodeType":"188","messageId":"189","endLine":5,"endColumn":31},{"ruleId":"186","severity":1,"message":"252","line":33,"column":20,"nodeType":"188","messageId":"189","endLine":33,"endColumn":26},"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'Yup' is defined but never used.","'yupResolver' is defined but never used.","'ChatRecord' is defined but never used.","'SendBtn' is defined but never used.","'useDispatch' is defined but never used.","'setUpSocket' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'useSelector' is defined but never used.","'userProfile' is defined but never used.","'queryClient' is assigned a value but never used.","'React' is defined but never used.","'color' is assigned a value but never used.","'backgroundColor' is assigned a value but never used.","'Navbar' is defined but never used.","'useEffect' is defined but never used.","'getContactList' is defined but never used.","'alignPropType' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'contactList' is assigned a value but never used.","'setContactList' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'updateSenderStatus' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'setMessageQueue' is defined but never used.","'updateMessageQueue' is defined but never used.","'format' is defined but never used.","'QueryCache' is defined but never used.","'isFetchingNextPage' is assigned a value but never used.","'isStale' is assigned a value but never used.","'hasNextPage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Array.prototype.map() expects a value to be returned at the end of arrow function.","'Stack' is defined but never used.","'Row' is defined but never used.","'Socket' is defined but never used.","'client' is assigned a value but never used.","'Form' is defined but never used.","'Axios' is defined but never used.","'date' is defined but never used.","'moment' is defined but never used.","'Moment' is defined but never used.","'MessageSenderLayout' is defined but never used.","'da' is defined but never used.","'dispatch' is assigned a value but never used.","'send' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'nanoid' is defined but never used.","'Action' is defined but never used.","'io' is defined but never used.","'axios' is defined but never used.","'errors' is assigned a value but never used."]