[{"/Users/law/Desktop/Prog/react_project/chatui/src/index.tsx":"1","/Users/law/Desktop/Prog/react_project/chatui/src/App.tsx":"2","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/ChatRoom.js":"3","/Users/law/Desktop/Prog/react_project/chatui/src/config/RotueTable.jsx":"4","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/Login/LoginPages.js":"5","/Users/law/Desktop/Prog/react_project/chatui/src/api/getData.js":"6","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Search.js":"7","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Action.js":"8","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ShortList.js":"9","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageTo.js":"10","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js":"11","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageSenderLayout.js":"12","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageReceiveLayout.js":"13","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js":"14","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/SendBtn.js":"15","/Users/law/Desktop/Prog/react_project/chatui/src/app/store.js":"16","/Users/law/Desktop/Prog/react_project/chatui/src/features/userProfile.js":"17","/Users/law/Desktop/Prog/react_project/chatui/src/features/Messages.js":"18","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/UserRegistration/Registration.js":"19","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactCreateForm.js":"20"},{"size":307,"mtime":1693325961355,"results":"21","hashOfConfig":"22"},{"size":629,"mtime":1693464958255,"results":"23","hashOfConfig":"22"},{"size":2561,"mtime":1694788709346,"results":"24","hashOfConfig":"22"},{"size":723,"mtime":1694076538871,"results":"25","hashOfConfig":"22"},{"size":3093,"mtime":1693465591245,"results":"26","hashOfConfig":"22"},{"size":659,"mtime":1693503232953,"results":"27","hashOfConfig":"22"},{"size":827,"mtime":1693381292675,"results":"28","hashOfConfig":"22"},{"size":852,"mtime":1694675905875,"results":"29","hashOfConfig":"22"},{"size":2089,"mtime":1694764459203,"results":"30","hashOfConfig":"22"},{"size":1254,"mtime":1693722690919,"results":"31","hashOfConfig":"22"},{"size":4360,"mtime":1694790578025,"results":"32","hashOfConfig":"22"},{"size":466,"mtime":1693497234873,"results":"33","hashOfConfig":"22"},{"size":511,"mtime":1693494696775,"results":"34","hashOfConfig":"22"},{"size":1440,"mtime":1694020575472,"results":"35","hashOfConfig":"22"},{"size":3282,"mtime":1694790752780,"results":"36","hashOfConfig":"22"},{"size":285,"mtime":1693543025400,"results":"37","hashOfConfig":"22"},{"size":620,"mtime":1693463740510,"results":"38","hashOfConfig":"22"},{"size":1384,"mtime":1694786918258,"results":"39","hashOfConfig":"22"},{"size":2964,"mtime":1694675400490,"results":"40","hashOfConfig":"22"},{"size":2143,"mtime":1694018469554,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"d9s00",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"59"},"/Users/law/Desktop/Prog/react_project/chatui/src/index.tsx",[],[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/App.tsx",[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/ChatRoom.js",["116","117","118","119","120","121","122"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/config/RotueTable.jsx",[],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/Login/LoginPages.js",["123","124","125","126","127"],[],"import React ,{useState}from 'react'\nimport {login_Api} from '../../api/getData'\nimport {useQuery , useMutation , useQueryClient} from '@tanstack/react-query'\nimport {Row, Col , Form , FormGroup , FormControl ,FormLabel, Container, Button} from 'react-bootstrap'\nimport {useForm} from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup' \nimport * as Yup from 'yup'\nimport './Login.css'\n\nimport { Link } from 'react-router-dom'\nimport {useDispatch ,useSelector} from 'react-redux'\nimport userProfile, {createProfile} from '../../features/userProfile'\nimport  { useNavigate } from 'react-router-dom'\n \nconst LoginPages = () => {\n  const queryClient = useQueryClient();\n  const nav =useNavigate();\n  const [isSuccessLogin, setLoginFail] = useState(true);\n    \n  const  formSchema = Yup.object().shape({\n    email: Yup.string()\n    .required(\"Email address is required !\"),\n    \n    password: Yup.string()\n    .max(process.env.REACT_APP_PASSWORD_LENGTH ,process.env.REACT_APP_PASSWORD_LENGTH_Execption_MSG)\n    \n  })\n  const {register , handleSubmit  ,formState:{errors}} = useForm({resolver: yupResolver(formSchema)})\n  \n  const dispatch = useDispatch()\n \n  const submit =async(formData)=>\n  {\n    \n    const res  =await login_Api(formData);\n    console.log(\"called\")\n    \n    let profile = {\n      username: formData.email,\n      access_Token : res.access_Token\n    }\n    if(res?.access_Token) {\n      dispatch(createProfile(profile))\n      nav(\"/chatRoom\");\n    }else{\n      console.log(\"login fail\")\n      setLoginFail(false);\n    }\n  }\n \n  \n\n\n                                \n\n  return (\n    <Container className='LoginContainer h-100' fluid={true}>\n        <Row  style={{height:'100vh'}}>\n          <Col className='emptySpace' xs={8}></Col>\n          <Col className='p-4 '>\n              <Form>\n                <legend>Login</legend>\n                <FormGroup className='mb-4'>\n                  <FormLabel>Username</FormLabel>\n                  <FormControl \n                    type='text'\n                    {...register(\"email\")}\n                  />\n                  <Form.Text>{errors.email?.message}</Form.Text>\n                </FormGroup>\n                <FormGroup className='mb-4'> \n                  <FormLabel>Password</FormLabel>\n                  <FormControl \n                    type='password'\n                    {...register(\"password\")}\n                    />\n                    <Form.Text>{errors.password?.message}</Form.Text>\n                </FormGroup>\n                <FormGroup hidden={isSuccessLogin}><FormLabel>email or password is not correct </FormLabel></FormGroup>\n              </Form>\n                <Button \n                      style={{backgroundColor:\"rgb(59, 72, 117)\" , border:'none'}}\n                      className=\"w-100 btnLogin p-2 card-subtitle-1\" \n                      onClick={handleSubmit(submit)}>Sign in</Button>\n                <Link to=\"/Registration\" className='registeration_dir card-subtitle-1' > Register new Account</Link>\n          </Col>\n        </Row>\n    </Container>\n  )\n}\n\nexport default LoginPages",[],"/Users/law/Desktop/Prog/react_project/chatui/src/api/getData.js",["128"],[],"import React from 'react'\nimport axios from \"axios\";\n\n\n    \nexport const login_Api =async(formData)=>{\n\n        let url = process.env.REACT_APP_API_BASE_URL+\"/authetication\" ;\n        const res = await axios.post(url ,formData)\n        console.log(res.data);\n        return res.data;\n}\n\nexport const getContactList =async(token)=>{\n        try{\n\n            let url = \"http://127.0.0.1:4085/nusrRoute/getPrivateMessage\";\n            const res= await axios.get(url,{\n                headers :{\n                    Authorization :token\n                }\n            })\n            return  res.data\n        }catch(err){\n            console.log(err);\n        }\n}\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Search.js",["129","130"],[],"import React, { useState } from 'react'\nimport {Button, Form, Stack} from 'react-bootstrap'\nconst Search = () => {\n  const [keywords, setKeywords] = useState(\"\");\n  const [color , backgroundColor] = useState(\"blue\")\n  const onhover= (e)=>{\n    \n  }\n\n  return (\n    <Stack \n          gap={3} \n          direction='horizontal'\n          style={{\n            padding:\"10px\",\n            borderBottom:\"1px solid gan\"\n          }}\n    >\n\n      <Form.Control \n        type=\"text\"\n        value={keywords}\n        onChange={(e)=> setKeywords(e.target.value)}\n        placeholder='Enter the email address'\n        />\n        <Button className='btn bg-light text-info'\n            style={{\n              border:\"none\",\n            }}\n          onMouseOver={onhover}\n        >Search</Button>\n      </Stack>\n\n  )\n}\n\nexport default Search\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/Action.js",["131","132"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ShortList.js",["133","134","135","136","137","138","139","140","141"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageTo.js",["142"],[],"import React, { useState } from 'react'\nimport './css/MessageTo.css'\nimport { Row, Col ,Stack} from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { updateSenderStatus } from '../../../features/Messages'\nconst MessageTo = ({socket}) => {\n\n  const header = useSelector(state=>state.msgSlice.MessageHeader)\n  const [status ,setStatus] = useState('');\n  const [isTyping ,setTpying] =useState(false);\n  \n  \n  socket.emit(\"onlineChecking\",header);\n  \n  socket.on(\"typing\", (res_isTyping)=>{\n    console.log(\"isTpying ?\" ,res_isTyping)\n    setTpying(res_isTyping)\n\n    isTyping ? setStatus(\"typing...\") :setStatus(\"\")\n  })\n  \n  socket.on(\"onlineChecking\" , (onlineStatus)=>{\n    console.log(\"Your status is retrieved \", onlineStatus);\n    console.log(status===\"\")\n        !isTyping && setStatus(onlineStatus)\n\n  })\n\n\n  return (\n    <div className='sendToBound'>\n        <Row>\n            <Col xs={1}>\n                <div className='imageBox'></div>\n            </Col>\n            <Col>\n            <Stack  direction=\"vertical\" gap={1}>\n                <div>{header.sendTo}</div>\n                <div className='typing'>{status}</div>\n\n            </Stack>\n            </Col>\n        </Row>\n     \n    </div>\n  )\n}\n\nexport default MessageTo\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessagePannel.js",["143","144","145","146","147","148","149","150","151","152","153"],[],"import React  ,{useEffect, useRef, useState} from 'react'\nimport './css/MessagePannel.css'\nimport MessageSenderLayout from './MessageSenderLayout'\nimport {Row ,Col } from 'react-bootstrap'\nimport MessageReceiveLayout from './MessageReceiveLayout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setMessageQueue, updateMessageQueue } from '../../../features/Messages'\nimport {format } from 'date-fns'\nimport SendBtn from './SendBtn'\nimport { QueryCache, useInfiniteQuery, useQuery, useQueryClient } from '@tanstack/react-query'\n\nimport axios from 'axios'\n\nconst MessagePannel = ({socket,cur_user }) => {\n\n    \n    const user =  useSelector(state=> state.user.profile);\n    const {chatId} =  useSelector(state=> state.msgSlice.MessageHeader);\n    const {messageQueue} = useSelector(state=> state.msgSlice);\n    const chatKey =[process.env.REACT_APP_REACT_KEY_GET_MESSAGE , chatId];\n\n\n    \n    const ref_Bottom =useRef(null);\n    const dispatch = useDispatch()    ;\n    const client = useQueryClient();\n    \n    \n\n\n    \n\n    const getRecord =async(page)=>{\n        try{          \n            let url = `http://127.0.0.1:4085/nusrRoute/getMessageByToken?token=${chatId}&page=${page}`\n             const data = await axios.post(url,{\"token\":chatId},{\n                headers: { \n                        \"Authorization\" :user.access_Token , \n                },\n            })\n            console.log(data)\n            return data\n        }catch(err){\n            console.log(err)\n        }\n        \n    }\n   \n    const fetchPriviousData =(e)=>{\n        console.log(\"fetching ....\")\n        const  clientHeight = e.target.clientHeight\n        const  scrollTop = e.target.scrollTop\n        const  scrollHeight = e.target.scrollHeight    \n        console.log(\"clientHeight \",clientHeight)\n        console.log(\"scrollTop \", scrollTop)\n        console.log(\"scrollHeight \", scrollHeight)\n        if (scrollTop <=  0){\n            console.log(\"should fetch\")\n            if (scrollTop  <= scrollHeight * 0.2){\n                fetchNextPage();\n                e.target.scrollTop = scrollHeight ;\n\n            }\n        }\n         \n    }\n\n    const {data ,isLoading ,isStale ,hasNextPage ,isRefetching,isFetched, fetchNextPage} = useInfiniteQuery([\"getMessageBytoken\", chatId ], async({pageParam=0})=>await getRecord(pageParam) ,{\n        getNextPageParam: (lastPage, allPages) =>{\n                return  allPages?.length +1 ;\n        },\n        keepPreviousData:false\n    \n    })\n    \n    let msgs =[];\n    if (isFetched){\n        \n        const result =data?.pages?.flatMap(ele =>ele.data)\n        console.log(\"result \" ,result) \n        msgs =result?.reverse();\n        ref_Bottom?.current?.scrollIntoView();\n    }\n\n    useEffect( ()=>{\n        dispatch(setMessageQueue(msgs));\n \n    },[isFetched])\n\n\n    useEffect(()=>{\n\n        socket.on(\"message\", (data)=>{\n            client.invalidateQueries([process.env.REACT_APP_REACT_KEY_GET_MESSAGE])\n            client.invalidateQueries([process.env.REACT_APP_REACT_KEY_GET_CONTACT_LIST])\n\n            const  date = new Date(data.sumited_at);\n            data.sumited_at= format(date,process.env.REACT_APP_DATE_FORMAT)\n\n            dispatch(updateMessageQueue(data));\n\n        })\n    },[])\n\n\n\n\n\n  return (\n    <React.Fragment>\n        <div className='pannelBound' >\n            <div className='mainContentChat'  onScroll={(e)=>fetchPriviousData(e)}  >\n                    <Row >\n                        {\n                            messageQueue?.map(({sender,sendTo , sumited_at ,message} ,index)=>{\n                                \n\n                              if(cur_user===sendTo){\n                                  return (<MessageReceiveLayout content={message} date={sumited_at} sender={sender} key={index}  />)\n                              \n                                }else if(cur_user=== sender){\n                                    return <MessageSenderLayout content={message}  date={sumited_at}  key={index}/>\n                                }\n\n                            })\n                        } \n                    </Row>\n                    <div ref={ref_Bottom} ><p hidden={true}> This is bottom</p></div>\n                </div>\n        </div>\n        <SendBtn socket={socket}  ref_Bottom={ref_Bottom} chatKey={chatKey}/>\n    </React.Fragment>\n  )\n}\n\nexport default MessagePannel\n",[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageSenderLayout.js",["154"],[],"import React from 'react'\nimport './css/MessageSenderLayout.css'\nimport {Row ,Col, Stack} from 'react-bootstrap'\nconst MessageSenderLayout = ({ content  ,date}) => {\n  return (\n      <Row className='mb-3 msgLayout_sender' >\n        <Col ></Col>\n        <Col  className=\"Sender_MainContent\" >\n            <div className='content'>{content}</div> \n            <div className='date'>{date}</div>\n        </Col>\n      </Row>\n\n  )\n}\n\n\n\nexport default MessageSenderLayout\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/MessageReceiveLayout.js",["155","156"],[],"import React from 'react'\nimport './css/MessageReceiveLayout.css'\nimport { Col ,Row } from 'react-bootstrap'\nconst MessageReceiveLayout = ({ sender,content ,date}) => {\n  return (\n    <Col className='recevierQueue' xs={13}>\n        <div className='msgLayout w-50 mb-3' xs={13}>\n            <div className='sender mb-2'>{sender}</div> \n            <div className='content'>{content}</div>\n            <div className='date'>{date}</div>\n        </div>\n    </Col>\n      \n  )\n}\n\nexport default MessageReceiveLayout\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactITEM.js",["157","158","159","160"],[],"import React from 'react'\nimport { Row, Stack ,Col } from 'react-bootstrap'\nimport './css/contactITEM.css'\nimport {format} from 'date-fns'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateOpenTheChat, updateSenderTarget } from '../../../features/Messages'\nimport { useQueryClient  } from '@tanstack/react-query'\nimport { Socket } from 'socket.io-client'\n\n\nconst ContactITEM = ({icon ,name, lastestMSG ,dateTime , chatToken   ,setOuterQueue}) => {\n  \n  const dispatch = useDispatch()\n  const username =  useSelector(state => state.user.profile.username)\n  \n  let date = format(new Date(dateTime) , \"dd/MM/yyyy\");\n\n  \n  \n  const client =useQueryClient();\n  const fetChatRecord=()=>{\n\n      const data = {\n            sendTo : name[0],\n            sender : username,\n            chatId:chatToken\n        }\n\n  \n      dispatch(updateSenderTarget(data));\n      dispatch(updateOpenTheChat(true));\n\n    \n\n      console.log(\"the queue is clear.......\")\n  } \n    \n\n\n  return (\n                  \n    <Stack direction='horizontal' className=\"Contact_itemContainer\" gap={3} onClick={fetChatRecord}>\n        <div className=\"icon\" ></div>\n        <div className=\"details\" style={{width:\"80%\"}}>\n                <div className='itemDateTime'>{date}</div>\n                <div className='name'>{name}</div>\n                <div className='latestMSG w-8'>{lastestMSG}</div>\n        </div>\n    </Stack>\n  )\n}\n\nexport default ContactITEM\n","/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/SendBtn.js",["161","162","163","164","165"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/app/store.js",["166"],[],"import { configureStore ,applyMiddleware } from '@reduxjs/toolkit'\nimport  profileReducer from '../features/userProfile'\nimport  messages from '../features/Messages'\n\nexport const store= configureStore({\n    reducer:{\n        user :  profileReducer,\n        msgSlice:messages\n    } \n})","/Users/law/Desktop/Prog/react_project/chatui/src/features/userProfile.js",["167","168"],[],"import {createSlice ,nanoid} from '@reduxjs/toolkit'\nimport Action from '../Pages/ChatRoot/componet/Action';\n\nconst initState = { \n    profile : {username:'/NA' , access_Token : ''} ,\n    socket : {}\n}\n\nconst  profileSlice = createSlice({\n    name :\"user\",\n    initialState:initState,\n    reducers:{\n        createProfile: (state ,Action)=>{\n            state.profile = Action.payload;\n        },\n        setUpSocket :(state, Action)=>{\n            state.socket = Action.payload  \n        }\n       \n        \n    }\n})\nexport const {createProfile ,setUpSocket} =profileSlice.actions;\n\nexport default profileSlice.reducer;\n","/Users/law/Desktop/Prog/react_project/chatui/src/features/Messages.js",["169"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/UserRegistration/Registration.js",["170","171"],[],"/Users/law/Desktop/Prog/react_project/chatui/src/Pages/ChatRoot/componet/ContactCreateForm.js",["172","173"],[],"import React, { useState } from 'react'\nimport {Button, Form ,Stack} from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport {createNewContectFn} from '../../../features/Messages'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport axios from 'axios'\n\nconst ContactCreateForm = ({access_token ,setContactList}) => {\n    const [contactUsr ,setContactUsr] = useState(\"\")\n    const [response ,setResponse] = useState(\"\")\n\n    const dispatch = useDispatch();\n\n    \n    const createNewContact = async(contactUser)=>{\n      const res = await axios.post(\n            `http://127.0.0.1:4085/nusrRoute/createContactUsr`,\n            {\n                contactUser: contactUser\n            },\n            {\n                headers:{\n                    Authorization: access_token\n                }\n            }\n        \n      )  \n        return res.data;\n\n      \n    }\n    \n    const {mutate ,errors}= useMutation( async (contactUser)=>await createNewContact(contactUser),{\n        onSuccess:({errorCode ,result})=>{\n            if(result){\n                setResponse(result)   \n\n            }else{\n                setResponse(errorCode)\n            }\n        },\n        enabled  :contactUsr !==\"\"\n    })\n\n   const call_API = ()=>{\n        mutate(contactUsr)\n   }\n\n\n  return (\n    <Form style={{padding:'20px'}}>\n        <Form.Group className='mb-4'>\n            <Form.Label>Contact users</Form.Label>\n             <Form.Control                 \n                type=\"text\" \n                className='mt-2'\n                value ={contactUsr}\n                onChange={(e)=>setContactUsr(e.target.value)}\n                placeholder='Enter the username'\n             />\n             <Form.Label className=\"w-100 mt-3\" style={{fontSize: '15px' , textAlign:\"center\",color:\"red\"}}>{response}</Form.Label>\n        </Form.Group>\n        <Stack gap={4}  style={{margin:\"auto\"}}>\n            <Button onClick={call_API}>Submit</Button>\n            <Button onClick={()=>dispatch(createNewContectFn(false))}>Return to Contact List </Button>\n        </Stack>\n\n    </Form>\n        \n      \n  )\n}\n\nexport default ContactCreateForm\n",{"ruleId":"174","severity":1,"message":"175","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":16},{"ruleId":"174","severity":1,"message":"178","line":4,"column":13,"nodeType":"176","messageId":"177","endLine":4,"endColumn":16},{"ruleId":"174","severity":1,"message":"179","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":21},{"ruleId":"174","severity":1,"message":"180","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":18},{"ruleId":"174","severity":1,"message":"181","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":15},{"ruleId":"174","severity":1,"message":"182","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":21},{"ruleId":"174","severity":1,"message":"183","line":15,"column":10,"nodeType":"176","messageId":"177","endLine":15,"endColumn":21},{"ruleId":"174","severity":1,"message":"184","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"185","line":3,"column":20,"nodeType":"176","messageId":"177","endLine":3,"endColumn":31},{"ruleId":"174","severity":1,"message":"186","line":11,"column":22,"nodeType":"176","messageId":"177","endLine":11,"endColumn":33},{"ruleId":"174","severity":1,"message":"187","line":12,"column":8,"nodeType":"176","messageId":"177","endLine":12,"endColumn":19},{"ruleId":"174","severity":1,"message":"188","line":16,"column":9,"nodeType":"176","messageId":"177","endLine":16,"endColumn":20},{"ruleId":"174","severity":1,"message":"189","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"190","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":15},{"ruleId":"174","severity":1,"message":"191","line":5,"column":18,"nodeType":"176","messageId":"177","endLine":5,"endColumn":33},{"ruleId":"174","severity":1,"message":"186","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":34},{"ruleId":"174","severity":1,"message":"192","line":3,"column":13,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"174","severity":1,"message":"193","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"194","line":4,"column":9,"nodeType":"176","messageId":"177","endLine":4,"endColumn":23},{"ruleId":"174","severity":1,"message":"195","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":9,"column":20,"nodeType":"198","messageId":"199","endLine":9,"endColumn":22},{"ruleId":"174","severity":1,"message":"200","line":13,"column":10,"nodeType":"176","messageId":"177","endLine":13,"endColumn":21},{"ruleId":"174","severity":1,"message":"201","line":13,"column":23,"nodeType":"176","messageId":"177","endLine":13,"endColumn":37},{"ruleId":"174","severity":1,"message":"202","line":14,"column":16,"nodeType":"176","messageId":"177","endLine":14,"endColumn":25},{"ruleId":"174","severity":1,"message":"203","line":14,"column":37,"nodeType":"176","messageId":"177","endLine":14,"endColumn":42},{"ruleId":"204","severity":1,"message":"205","line":52,"column":32,"nodeType":"206","messageId":"207","endLine":52,"endColumn":34},{"ruleId":"174","severity":1,"message":"208","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":28},{"ruleId":"174","severity":1,"message":"209","line":1,"column":36,"nodeType":"176","messageId":"177","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"210","line":4,"column":14,"nodeType":"176","messageId":"177","endLine":4,"endColumn":17},{"ruleId":"174","severity":1,"message":"211","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":20},{"ruleId":"174","severity":1,"message":"184","line":10,"column":40,"nodeType":"176","messageId":"177","endLine":10,"endColumn":48},{"ruleId":"174","severity":1,"message":"202","line":68,"column":18,"nodeType":"176","messageId":"177","endLine":68,"endColumn":27},{"ruleId":"174","severity":1,"message":"212","line":68,"column":29,"nodeType":"176","messageId":"177","endLine":68,"endColumn":36},{"ruleId":"174","severity":1,"message":"213","line":68,"column":38,"nodeType":"176","messageId":"177","endLine":68,"endColumn":49},{"ruleId":"174","severity":1,"message":"214","line":68,"column":51,"nodeType":"176","messageId":"177","endLine":68,"endColumn":63},{"ruleId":"215","severity":1,"message":"216","line":88,"column":7,"nodeType":"217","endLine":88,"endColumn":18,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":103,"column":7,"nodeType":"217","endLine":103,"endColumn":9,"suggestions":"220"},{"ruleId":"204","severity":1,"message":"221","line":115,"column":93,"nodeType":"206","messageId":"207","endLine":115,"endColumn":95},{"ruleId":"174","severity":1,"message":"222","line":3,"column":19,"nodeType":"176","messageId":"177","endLine":3,"endColumn":24},{"ruleId":"174","severity":1,"message":"210","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"223","line":3,"column":15,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"223","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"210","line":2,"column":22,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"174","severity":1,"message":"224","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":16},{"ruleId":"174","severity":1,"message":"225","line":20,"column":9,"nodeType":"176","messageId":"177","endLine":20,"endColumn":15},{"ruleId":"174","severity":1,"message":"226","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"227","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"228","line":7,"column":28,"nodeType":"176","messageId":"177","endLine":7,"endColumn":43},{"ruleId":"174","severity":1,"message":"229","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":12},{"ruleId":"174","severity":1,"message":"230","line":19,"column":12,"nodeType":"176","messageId":"177","endLine":19,"endColumn":15},{"ruleId":"174","severity":1,"message":"231","line":1,"column":26,"nodeType":"176","messageId":"177","endLine":1,"endColumn":41},{"ruleId":"174","severity":1,"message":"232","line":1,"column":22,"nodeType":"176","messageId":"177","endLine":1,"endColumn":28},{"ruleId":"174","severity":1,"message":"233","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"233","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"234","line":6,"column":9,"nodeType":"176","messageId":"177","endLine":6,"endColumn":11},{"ruleId":"174","severity":1,"message":"235","line":32,"column":19,"nodeType":"176","messageId":"177","endLine":32,"endColumn":22},{"ruleId":"174","severity":1,"message":"184","line":5,"column":23,"nodeType":"176","messageId":"177","endLine":5,"endColumn":31},{"ruleId":"174","severity":1,"message":"236","line":33,"column":20,"nodeType":"176","messageId":"177","endLine":33,"endColumn":26},"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'Yup' is defined but never used.","'yupResolver' is defined but never used.","'ChatRecord' is defined but never used.","'SendBtn' is defined but never used.","'useDispatch' is defined but never used.","'setUpSocket' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'useSelector' is defined but never used.","'userProfile' is defined but never used.","'queryClient' is assigned a value but never used.","'React' is defined but never used.","'color' is assigned a value but never used.","'backgroundColor' is assigned a value but never used.","'Navbar' is defined but never used.","'useEffect' is defined but never used.","'getContactList' is defined but never used.","'alignPropType' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'contactList' is assigned a value but never used.","'setContactList' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'updateSenderStatus' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'QueryCache' is defined but never used.","'isStale' is assigned a value but never used.","'hasNextPage' is assigned a value but never used.","'isRefetching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'msgs'. Either include them or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has missing dependencies: 'client', 'dispatch', and 'socket'. Either include them or remove the dependency array.",["238"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","'Stack' is defined but never used.","'Row' is defined but never used.","'Socket' is defined but never used.","'client' is assigned a value but never used.","'Form' is defined but never used.","'Axios' is defined but never used.","'setMessageQueue' is defined but never used.","'da' is defined but never used.","'nav' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'nanoid' is defined but never used.","'Action' is defined but never used.","'io' is defined but never used.","'res' is assigned a value but never used.","'errors' is assigned a value but never used.",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [dispatch, isFetched, msgs]",{"range":"243","text":"244"},"Update the dependencies array to be: [client, dispatch, socket]",{"range":"245","text":"246"},[2791,2802],"[dispatch, isFetched, msgs]",[3236,3238],"[client, dispatch, socket]"]